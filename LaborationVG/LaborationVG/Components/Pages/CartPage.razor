@page "/cartpage"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider auth
@inject ICartService cartService

<h3>Cart</h3>

<CartList />
@if (userId is not null)
{
    <EditForm Model="confirmUser" OnSubmit="ConfirmPurchase">
        <label class="form-label" for="inputName">Name:</label>
        <InputText @bind-Value="@confirmUser.Name" class="form-control" id="inputName"></InputText>
        <br />
        <label class="form-label" for="inputAddress">Address:</label>
        <InputText @bind-Value="@confirmUser.Address" class="form-control" id="inputAdress"></InputText>
        <br />
        <button type="submit" value="submit" class="btn btn-success">Confirm purchase</button>
    </EditForm>
}

@code {
    public Models.Cart? cart { get; set; }
    public string? userId { get; set; }
    ConfirmUser confirmUser = new();

    protected override async Task OnInitializedAsync()
    {
        await GetUser();
        if (userId is not null)
        {
            cart = await cartService.GetCart(userId);
        }
    }
    public async Task GetUser()
    {
        userId = (await auth.GetAuthenticationStateAsync()).User.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
    }

    public void ConfirmPurchase()
    {
        navigationManager.NavigateTo($"thankyou/{confirmUser.Name}/{confirmUser.Address}");
    }
}
